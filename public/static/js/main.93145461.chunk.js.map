{"version":3,"sources":["actions/rooms.js","actions/playback.js","components/SongInfo.js","components/Room.js","containers/RoomsContainer.js","components/Header.js","App.js","actions/user.js","reducers/index.js","reducers/room.js","reducers/playback.js","components/About.js","components/Instructions.js","index.js"],"names":["generateRoomKey","text","possible","i","charAt","Math","floor","random","length","syncTrack","token","album","track","position","fetch","method","headers","body","JSON","stringify","SongInfo","props","id","currentTrack","name","Image","src","image","rounded","artists","map","a","type","ProgressBar","now","percentage","room","roomKey","isHost","Button","onClick","closeRoom","variant","exitRoom","Room","deleteRoom","console","log","refresh","setState","start","Date","currentPosition","findRoom","fetchPlayingTrack","hostToken","state","timer","tick","progress_ms","this","duration_ms","setInterval","host","spotify_id","localStorage","getItem","clearInterval","toFixed","Boolean","event","Component","connect","playback","trackLoading","loading","dispatch","then","response","json","item","images","url","uri","track_number","catch","error","process","room_key","responseJSON","RoomsContainer","handleOnCreateButton","createRoom","onHandleSubmit","preventDefault","roomKeyText","onHandleChange","target","value","className","ButtonGroup","vertical","onSubmit","InputGroup","Text","FormControl","placeholder","onChange","Alert","host_token","Header","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","Link","CloseButton","logout","App","create_or_find_user","removeItem","user","display_name","setItem","fetchUser","dt","setHours","getHours","tokenExp","getTime","window","location","replace","time","interval","title","redirectUri","noLogo","noCookie","clientID","scopes","Scopes","userReadPrivate","onAccessToken","combineReducers","action","About","Instructions","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.93145461.chunk.js","sourcesContent":["export const createRoom = (hostToken) => {\r\n  return (dispatch) => {\r\n    // Kick of dispatch to start room creation\r\n    dispatch({ type: \"CREATE_ROOM_START\" });\r\n    let roomKey = generateRoomKey();\r\n    fetch(`${process.env.REACT_APP_API_HOST}/api/rooms/new`, {\r\n      method: 'POST', headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        room: {\r\n          room_key: roomKey,\r\n          host_token: hostToken,\r\n        },\r\n        spotify_id: localStorage.getItem(\"spotifyUser\"),\r\n      })\r\n    })\r\n      .then((responseJSON) => {\r\n        return responseJSON.json()\r\n      })\r\n\r\n      .then((json) => {\r\n        //Complete Dispatch of room creation\r\n        dispatch({\r\n          type: \"CREATE_ROOM\",\r\n          room: {\r\n            roomKey: json.room.room_key,\r\n            hostToken: hostToken,\r\n            host: json.host\r\n          }\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n/* ----------------------------------------------------*/\r\nconst generateRoomKey = () => {\r\n  let text = '';\r\n  const possible = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n};\r\n/* ----------------------------------------------------*/\r\nexport const deleteRoom = (roomKey) => {\r\n  return (dispatch) => {\r\n    // Kick of dispatch to start room creation\r\n    dispatch({ type: \"DELETE_ROOM_START\" });\r\n\r\n    fetch(`${process.env.REACT_APP_API_HOST}/api/rooms/delete`, {\r\n      method: 'POST', headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        room_key: roomKey,\r\n      })\r\n    })\r\n      .then((responseJSON) => {\r\n        return responseJSON.json()\r\n      })\r\n\r\n      .then((json) => {\r\n        //Complete Dispatch of room creation\r\n        dispatch({\r\n          type: \"DELETE_ROOM\",\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const findRoom = (roomKey) => {\r\n  return (dispatch) => {\r\n    // Kick of dispatch to start room creation\r\n    dispatch({ type: \"SEARCHING_FOR_ROOM\" });\r\n    fetch(`${process.env.REACT_APP_API_HOST}/api/rooms/${roomKey}`, {\r\n      method: 'POST', headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        room_key: roomKey,\r\n      })\r\n    })\r\n      .then((responseJSON) => {\r\n        return responseJSON.json()\r\n      })\r\n\r\n      .then((json) => {\r\n        //Complete Dispatch of room creation\r\n        dispatch({\r\n          type: \"ROOM_FOUND\",\r\n          room: {\r\n            roomKey: json.room.room_key,\r\n            hostToken: json.room.host_token,\r\n            host: json.host\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"ROOM_NOT_FOUND\",\r\n        });\r\n      })\r\n  };\r\n};\r\n\r\nexport const exitRoom = (roomKey) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"EXIT_ROOM\" });\r\n\r\n  };\r\n};\r\n\r\n","export const fetchPlayingTrack = (hostToken, isHost) => {\r\n  // Going to use this action for both pulling and syncing\r\n  let track;\r\n\r\n  return (dispatch) => {\r\n    dispatch({ type: \"LOADING_CURRENT_TRACK\" });\r\n    fetch('https://api.spotify.com/v1/me/player/currently-playing', {\r\n      method: 'GET', headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + hostToken\r\n      }\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json)\r\n        track = {\r\n          artists: json.item.artists,\r\n          album: {\r\n            image: json.item.album.images[0].url,\r\n            name: json.item.album.name\r\n          },\r\n          id: json.item.id,\r\n          name: json.item.name,\r\n          duration_ms: json.item.duration_ms,\r\n          progress_ms: json.progress_ms\r\n        }\r\n        dispatch({ type: \"LOAD_CURRENT_TRACK_SUCCESS\", track: track });\r\n\r\n        //Sync track after track has been obtained\r\n        if (isHost === false) {\r\n          dispatch({ type: \"SYNC_BEGIN\", track: track });\r\n          syncTrack(\r\n            localStorage.getItem(\"spotifyAuthToken\"),\r\n            json.item.album.uri,\r\n            json.item.track_number,\r\n            json.progress_ms\r\n          );\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: \"NO_TRACK\" })\r\n      });\r\n  }\r\n}\r\n\r\nconst syncTrack = (token, album, track, position) => {\r\n  fetch('https://api.spotify.com/v1/me/player/play', {\r\n    method: 'PUT', headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      \"context_uri\": album,\r\n      \"offset\": {\r\n        \"position\": track - 1\r\n      },\r\n      \"position_ms\": position\r\n    })\r\n  });\r\n}","import React from 'react';\r\nimport { Image, ProgressBar, Button } from 'react-bootstrap';\r\n\r\nconst SongInfo = (props) => {\r\n\r\n  return (\r\n    <>\r\n      <p id=\"playing-from\">Playing from Album</p>\r\n      <b><p id=\"album-name\">{props.currentTrack.album.name}</p></b>\r\n      <Image id=\"album-art\" src={props.currentTrack.album.image} rounded />\r\n      <b><p id=\"song-name\">{props.currentTrack.name}</p></b>\r\n      <div id=\"artists-name\">\r\n        {props.currentTrack.artists.map((a, i) => {\r\n          if (i !== props.currentTrack.artists.length - 1) {\r\n            return a.name + \", \"\r\n          }\r\n          else {\r\n            return a.name\r\n          }\r\n        })}\r\n      </div>\r\n      <style type=\"text/css\">{`.progress-bar { background-color: #2ebd59; height:5px} .progress{height:5px}`}\r\n      </style>\r\n      <ProgressBar now={props.percentage} />\r\n      <p id=\"room-key\">Room Id: {props.room.roomKey}</p>\r\n      {props.isHost ?\r\n        <Button onClick={props.closeRoom} variant=\"outline-warning\">Close Room</Button> :\r\n        <Button onClick={props.exitRoom} variant=\"outline-warning\">Leave Room</Button>\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default SongInfo;\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPlayingTrack } from '../actions/playback';\r\nimport { deleteRoom, exitRoom } from '../actions/rooms';\r\nimport SongInfo from './SongInfo'\r\nimport { Button } from 'react-bootstrap';\r\nclass Room extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      start: Date.now(),\r\n      currentPosition: 0,\r\n      currentTrack: {},\r\n      isHost: true\r\n    }\r\n    this.timer = null;\r\n    this.tick = () => {\r\n      this.setState({\r\n        currentPosition: Date.now() - this.state.start + (this.props.currentTrack.progress_ms || 0)\r\n      });\r\n    };\r\n\r\n\r\n  }\r\n\r\n  componentDidUpdate(props) {\r\n    //Update SongInfo when Song Ends\r\n    if (this.state.currentPosition >= this.props.currentTrack.duration_ms + 2000) {\r\n      this.setState({\r\n        start: Date.now(),\r\n        currentPosition: 0,\r\n        currentTrack: {},\r\n      });\r\n\r\n      this.props.findRoom(this.props.room.roomKey);\r\n      this.props.fetchPlayingTrack(this.props.room.hostToken, this.state.isHost);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Initialize timer for \"Now Playing\" progress bar\r\n    this.timer = setInterval(this.tick, 300);\r\n\r\n    //Check to see if the user is this room's host\r\n    if (this.props.room.host.spotify_id !== localStorage.getItem(\"spotifyUser\")) {\r\n      this.setState({\r\n        isHost: false\r\n      })\r\n    }\r\n\r\n    //Fetch Host's playing song\r\n    this.props.fetchPlayingTrack(this.props.room.hostToken, this.state.isHost);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  closeRoom = () => {\r\n    this.props.deleteRoom(this.props.room.roomKey)\r\n  }\r\n\r\n  exitRoom = () => {\r\n    console.log(\"EXIT ROOM\")\r\n    this.props.exitRoom(this.props.room.roomKey)\r\n  }\r\n\r\n  refresh = () => {\r\n    this.setState({\r\n      start: Date.now(),\r\n      currentPosition: 0\r\n    })\r\n\r\n    console.log(\"REFRESH\")\r\n    this.props.findRoom(this.props.room.roomKey);\r\n    this.props.fetchPlayingTrack(this.props.room.hostToken, this.state.isHost);\r\n\r\n  }\r\n\r\n  render() {\r\n    const percentage = +(this.state.currentPosition * 100 / this.props.currentTrack.duration_ms).toFixed(2);\r\n\r\n    // Only render if currentTrack information is available\r\n    if (Boolean(this.props.currentTrack.album)) {\r\n      return (\r\n        <>\r\n          <SongInfo\r\n            currentTrack={this.props.currentTrack}\r\n            percentage={percentage}\r\n            room={this.props.room}\r\n            closeRoom={this.closeRoom}\r\n            isHost={this.state.isHost}\r\n            exitRoom={this.props.exitRoom} />\r\n          <Button onClick={(event) => { this.refresh() }} variant=\"outline-success\">Sync</Button>\r\n        </>\r\n      )\r\n\r\n    }\r\n    else {\r\n      return <Button onClick={(event) => { this.refresh() }} variant=\"outline-success\">Sync</Button>\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentTrack: state.playback.track,\r\n    trackLoading: state.playback.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchPlayingTrack: (hostToken, isHost) => dispatch(fetchPlayingTrack(hostToken, isHost)),\r\n    deleteRoom: (roomKey) => dispatch(deleteRoom(roomKey)),\r\n    exitRoom: (roomKey) => dispatch(exitRoom(roomKey)),\r\n\r\n\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Room)\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, ButtonGroup, InputGroup, FormControl, Alert } from \"react-bootstrap\";\r\nimport { createRoom, findRoom } from \"../actions/rooms\";\r\nimport Room from '../components/Room';\r\nclass RoomsContainer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      roomKeyText: \"\"\r\n    }\r\n  }\r\n\r\n  handleOnCreateButton = event => {\r\n    this.props.createRoom(localStorage.getItem(\"spotifyAuthToken\"));\r\n  }\r\n\r\n  onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.findRoom(this.state.roomKeyText);\r\n  }\r\n\r\n  onHandleChange = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({\r\n      roomKeyText: event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"room_container\">\r\n        {this.props.room ?\r\n          < Room room={this.props.room} findRoom={this.props.findRoom} /> :\r\n          <ButtonGroup vertical className=\"center\" >\r\n            <Button onClick={() => { this.handleOnCreateButton() }} variant=\"outline-light\">Create Room</Button>\r\n            <br />\r\n            <form onSubmit={(event) => { this.onHandleSubmit(event) }}>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"basic-addon1\"></InputGroup.Text>\r\n                <FormControl\r\n                  placeholder=\"Room Key\"\r\n                  aria-label=\"Room Key\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  onChange={(event) => { this.onHandleChange(event) }}\r\n                />\r\n              </InputGroup>\r\n            </form>\r\n          </ButtonGroup>\r\n        }\r\n\r\n        {this.props.error === true ?\r\n          <Alert id=\"alert-warning\" variant=\"warning\">\r\n            Room Not Found\r\n          </Alert> : <></>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    room: state.room.room,\r\n    loading: state.room.loading,\r\n    error: state.room.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createRoom: (hostToken) => {\r\n      dispatch(createRoom(hostToken));\r\n    },\r\n\r\n    findRoom: (roomKey) => {\r\n      dispatch(findRoom(roomKey));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomsContainer)\r\n","\r\nimport React from 'react';\r\nimport { Image, CloseButton, Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst Header = (props) =>\r\n  <header>\r\n    <Navbar bg=\"black\" variant=\"dark\" expand=\"true\">\r\n      <Navbar.Brand href=\"/\"><Image className=\"logo\" src=\"./images/Spotify_Logo_RGB_Green.png\" /></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav >\r\n          <Nav.Link href=\"/about\">About</Nav.Link>\r\n          <Nav.Link href=\"/instructions\">Instructions</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n\r\n\r\n    <CloseButton id=\"close\" variant=\"white\" onClick={(event) => { props.logout() }} />\r\n  </header>\r\nexport default Header;\r\n","import './App.css';\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css';\nimport React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { fetchUser } from './actions/user'\nimport RoomsContainer from './containers/RoomsContainer';\nimport Header from './components/Header';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      time: 0,\n      tokenExp: Date.now() + 10000,\n    }\n  }\n\n  create_or_find_user = (token) => {\n    //Clear Previous Cookies\n    localStorage.removeItem(\"spotifyAuthToken\");\n    localStorage.removeItem(\"spotifyUser\");\n\n    //Retrieve User Information from Spotify\n    fetchUser(token);\n\n    //Store token expiration\n    let dt = new Date();\n    dt.setHours(dt.getHours() + 1);\n    console.log(dt)\n    this.setState({\n      tokenExp: dt.getTime()\n    })\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  logout = (event) => {\n    localStorage.removeItem(\"spotifyAuthToken\");\n    localStorage.removeItem(\"spotifyUser\");\n    window.location.replace(`${process.env.REACT_APP_HOST}`);\n  }\n\n  render() {\n    const client_id = process.env.REACT_APP_CLIENT_ID;\n    const redirectUri = process.env.REACT_APP_REDIRECTURI;\n    //console.log(Boolean(this.state.time < this.state.tokenExp), localStorage.getItem(\"spotifyAuthToken\"), time, exp)\n\n    return (\n      < div className=\"App\" >\n        <Header logout={this.logout} />\n\n        {Boolean(this.state.time < this.state.tokenExp) && Boolean(localStorage.getItem(\"spotifyAuthToken\")) ? //Check to see if the user is logged in and token is valid\n          <>\n            <RoomsContainer />\n          </>\n          :\n          <div className=\"Login\">\n            <br />\n            <br />\n            <SpotifyAuth\n              title=\"Continue With Spotify\"\n              redirectUri={redirectUri}\n              noLogo={true}\n              noCookie={true}\n              clientID={client_id}\n              className=\"center\"\n              scopes={[Scopes.userReadPrivate, 'user-read-email', 'user-read-playback-state', 'user-modify-playback-state']} // either style will work\n              onAccessToken={(token) => {\n                this.create_or_find_user(token);\n              }\n              }\n            />\n          </div>\n        }\n      </div >\n    );\n  }\n}\n\nexport default App;\n","export const fetchUser = (token) => {\r\n  let user;\r\n\r\n  fetch('https://api.spotify.com/v1/me', {\r\n    method: 'GET', headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': 'Bearer ' + token\r\n    }\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((json) => {\r\n      user = {\r\n        display_name: json.display_name,\r\n        spotify_id: json.id\r\n      }\r\n\r\n      localStorage.setItem(\"spotifyUser\", json.id);\r\n      localStorage.setItem(\"spotifyAuthToken\", token)\r\n\r\n      // Make POST to Backend to create or find user based on email\r\n      fetch(`${process.env.REACT_APP_API_HOST}/api/users/new`, {\r\n        method: 'POST', headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          user: user\r\n        })\r\n      })\r\n\r\n    });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { playbackReducer } from './playback';\r\nimport { roomReducer } from './room';\r\n\r\nexport default combineReducers({\r\n  room: roomReducer,\r\n  playback: playbackReducer,\r\n});\r\n","export const roomReducer = (state = { room: \"\", loading: false }, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_ROOM_START\":\r\n      return {\r\n        ...state,\r\n        room: state.room,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case \"CREATE_ROOM\":\r\n      return {\r\n        ...state,\r\n        room: action.room,\r\n        loading: false,\r\n      }\r\n    case \"DELETE_ROOM_START\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    case \"DELETE_ROOM\":\r\n      return {\r\n        ...state,\r\n        room: null,\r\n        loading: false,\r\n      }\r\n\r\n    case \"SEARCHING_FOR_ROOM\":\r\n      return {\r\n        ...state,\r\n        room: null,\r\n        loading: true,\r\n        error: false\r\n      }\r\n\r\n    case \"ROOM_FOUND\":\r\n      return {\r\n        ...state,\r\n        room: action.room,\r\n        loading: false,\r\n        error: false\r\n      }\r\n\r\n    case \"ROOM_NOT_FOUND\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n        room: null\r\n      }\r\n\r\n    case \"EXIT_ROOM\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        room: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nexport const playbackReducer = (state = { track: {}, loading: false }, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_CURRENT_TRACK\":\r\n      return {\r\n        ...state,\r\n        track: state.track,\r\n        loading: true,\r\n      };\r\n    case \"LOAD_CURRENT_TRACK_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        track: action.track,\r\n        loading: false,\r\n      }\r\n\r\n    case \"NO_TRACK\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nimport React from 'react';\r\nimport Header from './Header';\r\n\r\nconst About = (props) =>\r\n  <div className=\"App\">\r\n    <Header />\r\n    <h3 className=\"title\">About</h3>\r\n    <p>Spotify Together is a web app meant to synchronize the Spotify players of several users. The end goal of this project is to integrate with Twitch Extension panels.</p>\r\n    <p>Submit bug reports <a href=\"https://github.com/jousethen/spotify-together\">here</a> (Although, I don't know who's going to use this at the moment.</p>\r\n  </div>\r\nexport default About;\r\n","\r\nimport React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport Header from './Header';\r\nconst Instructions = (props) =>\r\n  <div className=\"App\">\r\n    <Header />\r\n    <h3 className=\"title\">Instructions for Host</h3>\r\n    <ol>\r\n      <li>Log in. If you have trouble, click the X on the top left of the screen to clear your cache and attempt to log in again</li>\r\n      <li>Make sure your Spotify is currently playing music</li>\r\n      <li>Click on \"Create Room\"</li>\r\n      <li>Share the code shown with your friends! (Or enemies)</li>\r\n    </ol>\r\n\r\n    <h3 className=\"title\">Instructions for Listener</h3>\r\n    <ol>\r\n      <li>Log in. If you have trouble, click the X on the top left of the screen to clear your cache and attempt to log in again</li>\r\n      <li>Make sure you have a room code from the Host</li>\r\n      <li>Fill out the space provided and press Enter</li>\r\n      <li>Click on the 'Sync' button to listen along with the host</li>\r\n    </ol>\r\n\r\n\r\n    <p>Submit bug reports <a href=\"https://github.com/jousethen/spotify-together\">here</a> (Although, I don't know who's going to use this at the moment.</p>\r\n  </div>\r\nexport default Instructions;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/index\"\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n//import Test from './test/test';\nimport About from './components/About';\nimport Instructions from './components/Instructions';\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/callback\" element={<App />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/instructions\" element={<Instructions />} />\n      </Routes>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}